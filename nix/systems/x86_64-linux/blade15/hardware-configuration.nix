# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "nvme" "usbhid" "usb_storage" "sd_mod"];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];
  # nouveau boots to blackscreen
  boot.blacklistedKernelModules = ["nouveau"];
  # "mem_sleep_default=s2idle"
  boot.kernelParams = ["pcie_aspm=force" "mem_sleep_default=deep"];

  boot.tmp = {
    useTmpfs = true;
    tmpfsSize = "4G";
  };

  boot.initrd.luks.devices."nixos_crypt" = {
    device = "/dev/disk/by-partuuid/d47414ef-334a-41f6-9789-72460549885f";
    allowDiscards = true;
    bypassWorkqueues = true;
  };

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = ["defaults" "size=2G" "mode=755"];
  };

  fileSystems."/efi" = {
    device = "/dev/disk/by-path/pci-0000:03:00.0-nvme-1-part1";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-partlabel/nixboot";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/nix" = {
    device = "/dev/mapper/nixos_crypt";
    fsType = "btrfs";
    options = ["subvol=@nix" "noatime" "compress-force=zstd:1"];
  };

  fileSystems."/home" = {
    device = "/dev/mapper/nixos_crypt";
    fsType = "btrfs";
    options = ["subvol=@home" "compress-force=zstd:1"];
  };

  fileSystems."/persistent" = {
    device = "/dev/mapper/nixos_crypt";
    neededForBoot = true;
    fsType = "btrfs";
    options = ["subvol=@persistent" "noatime" "compress-force=zstd:1"];
  };

  fileSystems."/swap" = {
    device = "/dev/mapper/nixos_crypt";
    fsType = "btrfs";
    options = ["subvol=@swap" "noatime"];
  };

  # lanzaboote XBOOTLDR workaround https://github.com/nix-community/lanzaboote/issues/173#issuecomment-1532386210
  fileSystems."/efi/EFI/Linux" = {
    device = "/boot/EFI/Linux";
    depends = ["/boot" "/efi"];
    options = ["bind"];
  };
  fileSystems."/efi/EFI/nixos" = {
    device = "/boot/EFI/nixos";
    depends = ["/boot" "/efi"];
    options = ["bind"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.enableRedistributableFirmware = true;
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
