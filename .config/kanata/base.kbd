;; global settings
(defvar
  tap-timeout   300
  hold-timeout  300
  tt $tap-timeout
  ht $hold-timeout
)

(defalias
  ;; tap: backtick (grave), hold: toggle layer-switching layer while held
  grl (tap-hold 200 200 grv (layer-toggle layers))

  ;; layer-switch changes the base layer.
  van (layer-switch vanilla)
  qwr (layer-switch qwerty)

  ;; tap: esc, hold: caps-word
  cap (tap-hold $tt $ht esc (caps-word 2000))

  ;; international layer
  intl (multi ralt (layer-while-held international))

  ;; lalt to tab / num layer
  tab_num (tap-hold $tt $ht tab (layer-while-held numbers))

  ;; space to spc / nav layer
  spc_nav (tap-hold $tt $ht spc (layer-while-held navigation))

  ;; ralt to ret / ralt
  ret_ralt (tap-hold $tt $ht ret @intl)

  ;; escape chord
  chg (chord escape g)
  chh (chord escape h)

  ;; left home row mods
  mlsft (tap-hold $tt $ht f lsft)
  mlctl (tap-hold $tt $ht d lctl)
  mlalt (tap-hold $tt $ht s lalt)
  mlmet (tap-hold $tt $ht a lmet)
  mlhyp (tap-hold $tt $ht @chg (multi lmet lalt lctl lsft))

  ;; right home row mods
  mrsft (tap-hold $tt $ht j rsft)
  mrctl (tap-hold $tt $ht k rctl)
  mralt (tap-hold $tt $ht l @intl)
  mrmet (tap-hold $tt $ht ; rmet)
  mrhyp (tap-hold $tt $ht @chh (multi rmet lalt rctl rsft))
)

(defchords escape 100
  (g   ) g
  (   h) h
  (g  h) esc
)

;; The first layer defined is the layer that will be active by default when kanata starts up.
;; main layer with home row mods and thumb keys
(deflayer qwerty
  @grl 1      2         3      4      5      6      7      8          9      0      -    =    bspc
  tab  q      w         e      r      t      y      u      i          o      p      [    ]    \
  @cap @mlmet @mlalt    @mlctl @mlsft @mlhyp @mrhyp @mrsft @mrctl     @mralt @mrmet '    ret
  lsft z      x         c      v      b      n      m      ,          .      /      rsft
  lctl lmet   @tab_num                @spc_nav             @ret_ralt  rmet   rctl
)

;; layer without mods, can be used if other people want to use the machine
(deflayer vanilla
  @grl 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; use as template when creating new layers
(deflayer template
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)

(defalias
  ;; switch curly and square brackets TODO broken, because shift is active in both cases
  lcbrc (fork S-lbrc (multi (release-key lsft) lbrc) (lsft rsft))
  rcbrc (fork S-rbrc rbrc (lsft rsft))

  ;; parentheses and angle brackets
  lpar (fork S-9 S-, (lsft rsft))
  rpar (fork S-0 S-. (lsft rsft))
)

(deflayer navigation
  _    _    _    _    _    _    _    _      _       _     _    _    _    _
  _    _    _    _    _    _    tab  @lcbrc @rcbrc  @lpar @rpar  XX  XX    _
  _    lmet lalt lctl lsft _    lft  down   up      rght  XX    _    _
  _    _    _    bspc del  _    home pgdn   pgup    end   _    _
  _    _    _              _                _       _     _
)

(deflayer numbers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    grv  7    8    9    eql  _    _    _
  _    lmet lalt lctl lsft _    apo  4    5    6    min  _    _
  _    _    _    _    _    _    0    1    2    3    bksl _
  _    _    _              _              _    _    _
)

;; layer-switching layer
(deflayer layers
  _    @qwr @van lrld-prev lrld-next _    _    _    _    _    _    _    _    _
  _    _    _    _         _         _    _    _    _    _    _    _    _    _
  _    _    _    _         _         _    _    _    _    _    _    _    _
  _    _    _    _         _         _    _    _    _    _    _    _
  _    _    _                        _              _    _    _
)


